%% Threshold method parameter search (pre/post TTX)
%{
Script to search through threshold parmeters to look at the number of
detected spikes.

Things to modify: 
params (structure) : see 'Fixed parameters' section for the fields 
vars_to_save (cell of str) : cell containing variable names to save 
compare_pre_post_ttx  (bool) : whether to compare pre-post TTX files, or
just loop through all the files 

%}

compare_pre_post_ttx = true;

clear all; close all; clc;

% path = '/media/timsit/phts2/tempData/doSpikeDetection/';
path = '/media/timsit/Seagate Expansion Drive/The_Mecp2_Project/organoid_data/mat/doSpikeDetection/';
save_folder = '/media/timsit/Seagate Expansion Drive/The_Mecp2_Project/organoid_data/spikes/thresholdParamSearch/';

% Windows machine 
% path = 'D:\The_Mecp2_Project\organoid_data\mat\doSpikeDetection';
% save_folder = 'D:\The_Mecp2_Project\organoid_data\spikes\thresholdParamSearch';

thisPath = pwd;
cd (path)
files = dir('*.mat');
cd (thisPath)

%% Fixed parameters

params.multiplier = 3; % threshold multiplier for initial 
params.refPeriod_ms = 2;  % refractory period (ms)
params.grd = []; % which electordes are grounded / to ground in analysis
params.save_filter_trace = 0;  % whether to save filtered raw data
params.subsample_time = [];  % Start and end time (in seconds)

% if empty, then go through the entire recording 

%% Parameters for saving things 
% Determine which variables to save
vars_to_save = {'spikeDetectionResult', 'channels', 'grd'};

%% multiplier values to search over 
multiplier_to_search = [3, 3.5, 4, 4.5, 5, 5.5, 6];

%% Find pre and post TTX pairs 
if compare_pre_post_ttx
    % (NOTE: threshold for post-TTX is dependent on pre-TTX condition)

    folder_name = files.folder;
    file_names = {files.name};
    pre_TTX_files = {file_names{1:2:end}};
    TTX_files = {file_names{2:2:end}};
    pre_post_TTX_files = [pre_TTX_files; TTX_files]';


    for file_idx = 1:size(pre_post_TTX_files, 1)

            % Load data first, then go through the thresholds
            pre_TTX_file_name = pre_post_TTX_files(file_idx, 1);
            pre_TTX_data = load([folder_name filesep pre_TTX_file_name{1}]);

            post_TTX_file_name = pre_post_TTX_files(file_idx, 2);
            post_TTX_data =  load([folder_name filesep post_TTX_file_name{1}]);

            for multiplier = multiplier_to_search

                params.multiplier = multiplier;
                params.save_suffix = ['_' strrep(num2str(params.multiplier), '.', 'p')];

                params.TTX = 0;
                params.threshold = [];

                % get meta-data and put them to 
                pre_TTX_trace = pre_TTX_data.dat;
                params.channels = pre_TTX_data.channels;
                channels = pre_TTX_data.channels;   % just for saving
                grd = params.grd;  % just for saving
                params.fs = pre_TTX_data.fs;

                [spikeDetectionResult, threshold_val] = ...
                    getSpikesThreshold(pre_TTX_trace, params);

                % Save Pre-TTX spike data
                save(fullfile(save_folder, [pre_TTX_file_name{1}(1:end-4) params.save_suffix '_spikes.mat']), ... 
                vars_to_save{:}, '-v7.3');


                % Do Post-TTX spike detection

                params.TTX = 1;
                params.threshold = threshold_val;
                post_TTX_trace = post_TTX_data.dat;
                params.channels = post_TTX_data.channels;
                channels = post_TTX_data.channels;
                params.fs = post_TTX_data.fs;

                [spikeDetectionResult, threshold_val] = ...
                    getSpikesThreshold(post_TTX_trace, params);

                % Save post-TTX spike data
                save(fullfile(save_folder, [post_TTX_file_name{1}(1:end-4) params.save_suffix '_spikes.mat']), ... 
                vars_to_save{:}, '-v7.3');
            end 

    end 

end 

%% Loop over all the files (without using the same threshold for pre-post TTX)
% Here I la



